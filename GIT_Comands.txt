git init
git status
git add README
cat .gitignore

# комментарий — эта строка игнорируется
*.a # не обрабатывать файлы, имя которых заканчивается на .a
!lib.a # НО отслеживать файл lib.a, несмотря на то, что мы игнорируем все .a файлы с помощью предыдущего правила
/TODO # игнорировать только файл TODO находящийся в корневом каталоге, не относится к файлам вида subdir/
TODO
build/ # игнорировать все файлы в каталоге build/
doc/*.txt # игнорировать doc/notes.txt, но не doc/server/arch.txt

git diff
git diff --cached
rm grit.gemspec
git rm --cached readme.txt

git log

git log --pretty=oneline
short, full, и fuller,

git log --pretty=format:"%h - %an, %ar : %s"


Параметр Описание выводимых данных
`%H`Хеш коммита
`%h`Сокращенный хеш коммита
`%T`Хеш дерева
`%t`Сокращенный хеш дерева
`%P`Хеши родительских коммитов
`%p`Сокращенные хеши родительских коммитов
`%an`Имя автора
`%ae`Электронная почта автора
`%ad`Дата автора (формат соответствует параметру --date= )
`%ar`Дата автора, относительная (пр. "2 мес. назад")
`%cn`Имя коммитера
`%ce`Электронная почта коммитера
`%cd`Дата коммитера
`%cr`Дата коммитера, относительная
`%s`Комментарий

git log --pretty=format:"%h %s" --graph

 git log --since=2.weeks


`--since`, `--after`Ограничить коммиты теми, которые сделаны после указанной даты.
`--until`, `--before`Ограничить коммиты теми, которые сделаны до указанной даты.
`--author`Показать только те коммиты, автор которых соответствует указанной строке.
`--committer`Показать только те коммиты, коммитер которых соответствует указанной строке

git commit --amend

$ git commit -m 'initial commit'
$ git add forgotten_file
$ git commit --amend


git reset HEAD benchmarks.rb

 git fetch [remote-name]
 
 git push origin master
 
 
 
 


